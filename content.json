[{"title":"github+hexo搭建个人博客","slug":"github-hexo搭建个人博客","date":"2017-12-08T16:29:07.000Z","updated":"2017-12-09T17:56:05.662Z","comments":true,"path":"2017/12/09/github-hexo搭建个人博客/","link":"","permalink":"http://Ison-Laihus.github.io/2017/12/09/github-hexo搭建个人博客/","excerpt":"","text":"步骤概览 注册一个github账号以及配置 在本地下载git，nodejs 下载hexo 在本地建立博客仓库 关联github page 选用主题 撰写博客 注册一个github账号以及配置我们的博客是由github+hexo搭建而成的，所以github必定是基础中的基础，前提中的前提。 什么是github？github是一个面向开元及私有软件项目的管理平台，因为只支持git作为唯一的版本库格式进行托管，故名github。 Step One首先，我们得去github去注册一个账号。 sign up 是注册， sign in 是登录 Step Two新建一个代码库，点击右上角的加号，点击New repository命名你要创建的代码库，这里需要注意，你代码库的名字一定得是yourname.github.io这里的yourname是你的账户名至于description，你可写可不写，然后点击最下方的create repository绿色按钮就OK了 Step Three设置代码库，开启gh-pages功能，这个功能是我们能够利用github搭建个人博客的重要功能。代码库创建成功之后，我们会进入如下界面：然后点击图片上部菜单末尾的settings属性，下滑到Github Pages设置这块由他的描述可知，github pages被设计为从Github库中托管您的个人、组织或项目页面。我们也获知其现在是无效的，需要我们往其中添加内容。我们可以点击下方的choose a theme按钮，然后选择你喜爱的风格：点击select theme按钮，它默认给你创建了一个issue，填充好了内容，然后你只需点击commit changes按钮即可 如果您完成了上述的工作，name恭喜你，你已经完成了第一部分的内容。然后您可以在浏览器的地址栏输入https://yourname.github.io查看您的项目页面。 在本地下载git，nodejs为甚我们需要下载git和nodejs呢？因为我们选用的hexo框架依赖于git和nodejs。 我们可以去git官网上去下载git。下载完成之后，双击安装即可。 强烈建议不要将其安装到C盘 然后一直next，知道finish 然后在桌面空白处点击右键，就会发现右键菜单中多出了Git GUI Here 和 Git Bash Here这两个选项 然后安装nodejs，官网网址点击.msi文件或是.zip文件均可，然后下载安装或解压。 要注意，需要配置环境变量在 控制面板 &gt; 系统和安全 &gt; 系统 &gt; 高级系统设置 &gt; 环境变量 &gt; 系统变量中的path &gt; 编辑 &gt; 新建 &gt; 将你安装node的文件路径复制然后一直点击确认即可 下载hexo什么是Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装hexo，打开命令行，执行如下命令 1npm install -g hexo 安装成功，可以执行hexo -v查看安装的版本 建立博客代码库新建一个文件夹，cmd运行进入到该目录下，使用hexo init命令初始化代码库然后使用如下命令1npm install --save hexo-deployer-git 安装所需的一些依赖包 运行博客 清除缓存文件 1hexo clean 生成静态文件 1hexo generate 或 hexo g 启动服务器 1hexo server 执行完上述命令，打开浏览器，输入http://localhost:4000，即可看到稍微满意的结果 关联github page配置git个人信息打开git bash，输入如下命令：12git config --global user.name &quot;xxx&quot; git config --global user.emal &quot;xxx@xxx.xxx&quot; 将其中的xxx替换成您自己的信息 然后使用如下命令生成秘钥：1ssh-keygen -t rsa -C &quot;your email&quot; 请将your email替换成您自己的邮箱 执行完毕，就会在C盘的用户目录下生成一个.ssh文件夹，其中会有id_rsa和id_rsa.pub这两个文件，分别是私钥和公钥 添加生成的秘钥到到ssh-agent12eval `ssh-agent -s` # 启动ssh-agent ssh-add # 添加秘钥 将公钥复制，进入github settings中的Deploy Keys选项，点击Add Deploy Key按钮将公钥复制到Key文本栏中，title栏可以任意填点击 Add Key即可 这是为了避免您每次想github推送您更新的博客时，都需要输入您的用户名和密码，配置公钥私钥能够让git自动帮您进行认证 配置Deployment在您博客代码库的根目录下有一个_config.yml文件，这是您网站的配置文件。您需要进行一些修改以匹配您的git page1234deploy: type: git git@github.com:Ison-Laihus/Ison-Laihus.github.io.git branch: master 请进行相应的替换 在_config.yml文件中还有其他一些参数可以配置例如： 修改博客站点信息1234567# Sitetitle: Ison Blog subtitle: happy to have a blog description:author: Ison language:timezone: 将本地博客部署到github pages部署命令1hexo deploy 或 hexo d 但是需要注意，在部署之前，需要先进行清除缓存和生成静态文件的命令 然后再浏览器中输入URL: https://yourname.gihub.io，就会发现已经将本地博客部署到github上了 选用主题在github上，有许许多多github的主题，您可以在github上进行搜索 您可以选择您喜爱的主题，然后下载到本地博客代码仓库themes文件夹下 例如，我们选择hexo-theme-even这个主题，然后使用git bash从github上克隆下来12npm install hexo-renderer-scss --save # 首先安装依赖的包 git clone git@github.com:ahonn/hexo-theme-even.git themes/even 后面的themes/even请根据您的自身情况进行修改 然后修改_config.yml文件中的theme字段，因为我们将下载的主题命名为even，所以我们将这个字段设置为even 然后清除缓存，生成静态文件，部署在浏览器输入URL: https://yourname.gihub.io，发现博客主题已经被更改，但是却很糟糕 这里不知道是不是作者写错了还是怎么，不过我们可以做一些修改： 进入主题even的文件夹中，进入layout/_partial文件夹下，打开head.swig文件，将如下两行代码做些修改123&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;&#123;&#123; url_for(theme.favicon) &#125;&#125;?v=&#123;&#123; theme.version &#125;&#125;&quot; /&gt; ··· &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&#123;&#123; url_for(&apos;css/style.css&apos;) &#125;&#125;?v=&#123;&#123; theme.version &#125;&#125;&quot; /&gt; 修改成123&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;&#123;&#123; url_for(theme.favicon) &#125;&#125;&quot; /&gt; ··· &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&#123;&#123; url_for(&apos;css/style.css&apos;) &#125;&#125;&quot; /&gt; 然后执行必备的三步，即可看到炫酷的效果 是不是很酷炫呢:) 撰写博客终于到了我们最后一个模块了——撰写博客 hexo有一个新建博客文章的命令1hexo new &lt;title&gt; 该命令会自动在source/_post文件夹下生成一个markdown文件，然后我们可以使用Markown编辑器打开这个文件进行编辑，撰写我们的博客。 这似乎很简单，但是这并不是我所要说的重点。 我所说的重点是，如何在我们的博客代码仓库存储我们的数据文件，例如，如果有一张图片，我们该怎么保存在我们的图片呢？ 不要着急，hexo给我们提供了这个功能。 我们只需要在根目录下的_config.yml中修改post_asset_folder的字段设置为true1post_asset_folder: true 然后当我们使用新建博客文章的命令的同时，会在source/_post目录下生成一个与你博客文章同名的文件夹，你可以将你的数据文件放入这个文件夹中，然后使用如下命令进行引用：1&#123;% asset_img example.jpg This is an example image %&#125; asset_img是不能更改的，example.jpg根据您的图片名称进行修改，This is an example是描述语句，可以任意更改。 结语至此，使用github+hexo搭建个人博客已经完成，如果有误，希望指正。更多内容，请参考hexo官方文档","categories":[],"tags":[{"name":"部署","slug":"部署","permalink":"http://Ison-Laihus.github.io/tags/部署/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-12-07T12:53:43.641Z","updated":"2017-12-07T12:53:43.641Z","comments":true,"path":"2017/12/07/hello-world/","link":"","permalink":"http://Ison-Laihus.github.io/2017/12/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]